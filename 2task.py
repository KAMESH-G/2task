# -*- coding: utf-8 -*-
"""2task

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Nm9mqu8ozFPYzxTg6WkO9yGqzqENwv-_
"""

import pandas as pd

# Load the dataset (assuming it's loaded into a DataFrame named df)

# Question 1: How many people of each race are represented in this dataset?
race_counts = df['race'].value_counts()

# Question 2: What is the average age of men?
average_age_men = df[df['sex'] == 'Male']['age'].mean()

# Question 3: What is the percentage of people who have a Bachelor's degree?
percentage_bachelors = (df['education'] == 'Bachelors').mean() * 100

# Question 4: What percentage of people with advanced education make more than 50K?
advanced_education = df['education'].isin(['Bachelors', 'Masters', 'Doctorate'])
higher_education_percentage = (df[advanced_education]['salary'] == '>50K').mean() * 100

# Question 5: What percentage of people without advanced education make more than 50K?
lower_education_percentage = (df[~advanced_education]['salary'] == '>50K').mean() * 100

# Question 6: What is the minimum number of hours a person works per week?
min_hours_per_week = df['hours-per-week'].min()

# Question 7: What percentage of people who work the minimum number of hours per week have a salary of more than 50K?
min_hours_per_week_and_50K_percentage = (df[df['hours-per-week'] == min_hours_per_week]['salary'] == '>50K').mean() * 100

# Question 8: What country has the highest percentage of people that earn >50K and what is that percentage?
highest_earning_country = (df[df['salary'] == '>50K']['native-country']
                           .value_counts(normalize=True).idxmax())
highest_earning_percentage = (df[df['salary'] == '>50K']['native-country']
                              .value_counts(normalize=True).max() * 100)

# Question 9: Identify the most popular occupation for those who earn >50K in India.
indian_occupation_stats = df[(df['native-country'] == 'India') & (df['salary'] == '>50K')]
top_IN_occupation = indian_occupation_stats['occupation'].value_counts().idxmax()

# Print or return the results
print("Question 1:", race_counts)
print("Question 2:", round(average_age_men, 1))
print("Question 3:", round(percentage_bachelors, 1))
print("Question 4:", round(higher_education_percentage, 1))
print("Question 5:", round(lower_education_percentage, 1))
print("Question 6:", min_hours_per_week)
print("Question 7:", round(min_hours_per_week_and_50K_percentage, 1))
print("Question 8:", highest_earning_country, round(highest_earning_percentage, 1))
print("Question 9:", top_IN_occupation)